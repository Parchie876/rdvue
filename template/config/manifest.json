{
  "version": 1,
  "name": "config",
  "description": "Mandatory project configuration.",
  "singleUserPerProject": true,
  "arguments": [
    {
      "name": "projectNameKebab",
      "type": "string",
      "description": "the name for the generated project. (e.g. my-project)"
    },
    {
      "name": "projectName",
      "type": "string",
      "description": "the name for the generated project.",
      "isPrivate": true
    }
  ],
  "sourceDirectory": "./",
  "installDirectory": "./",
  "files": [
    {
      "source": "meta/.rdvue/.rdvue",
      "target": ".rdvue/.rdvue"
    },
    {
      "source": "meta/.rdvue/routes.js",
      "target": ".rdvue/routes.js"
    },
    {
      "source": "meta/.rdvue/stores.js",
      "target": ".rdvue/stores.js"
    },
    {
      "source": "meta/package.json",
      "target": "package.json",
      "content": [
        {
          "matchRegex": "__PROJECT__NAME__KEBAB__",
          "replace": "${projectNameKebab}"
        }
      ]
    },
    {
      "source": "core/main.ts",
      "target": "src/main.ts"
    },
    {
      "source": "env/env.ts",
      "target": "src/config/env.ts"
    },
    {
      "source": "env/env.dev.ts",
      "target": "src/config/env.dev.ts"
    },
    {
      "source": "env/env.prod.ts",
      "target": "src/config/env.prod.ts"
    },
    {
      "source": "core/register-service-worker.ts",
      "target": "src/config/register-service-worker.ts"
    },
    {
      "source": "core/router.ts",
      "target": "src/config/router.ts"
    },
    {
      "source": "core/shims-tsx.d.ts",
      "target": "src/config/shims-tsx.d.ts"
    },
    {
      "source": "core/shims-vue.d.ts",
      "target": "src/config/shims-vue.d.ts"
    },
    {
      "source": "services/base.ts",
      "target": "src/services/base.ts"
    },
    {
      "source": "app/app.scss",
      "target": "src/pages/app/app.scss"
    },
    {
      "source": "app/app.ts",
      "target": "src/pages/app/app.ts"
    },
    {
      "source": "app/app.vue",
      "target": "src/pages/app/app.vue"
    },
    {
      "source": "app/index.ts",
      "target": "src/pages/app/index.ts"
    },
    {
      "source": "hello-world/hello-world.scss",
      "target": "src/pages/hello-world/hello-world.scss"
    },
    {
      "source": "hello-world/hello-world.ts",
      "target": "src/pages/hello-world/hello-world.ts"
    },
    {
      "source": "hello-world/hello-world.vue",
      "target": "src/pages/hello-world/hello-world.vue"
    },
    {
      "source": "hello-world/index.ts",
      "target": "src/pages/hello-world/index.ts"
    },
    {
      "source": "public/index.html",
      "target": "public/index.html",
      "content": [
        {
          "matchRegex": "__PROJECT__NAME__KEBAB__",
          "replace": "${projectNameKebab}"
        }
      ]
    },
    {
      "source": "public/manifest.json",
      "target": "public/manifest.json",
      "content": [
        {
          "matchRegex": "__PROJECT__NAME__KEBAB__",
          "replace": "${projectNameKebab}"
        }
      ]
    },
    {
      "source": "public/favicon.ico",
      "target": "public/favicon.ico"
    },
    {
      "source": "meta/gitignore.txt",
      "target": ".gitignore"
    },
    {
      "source": "cypress/cypress.json",
      "target": "cypress.json"
    },
    {
      "source": "cypress/tsconfig.json",
      "target": "cypress/tsconfig.json"
    },
    {
      "source": "cypress/integration/specs/actions.spec.ts",
      "target": "cypress/integration/specs/actions.spec.ts"
    },
    {
      "source": "cypress/integration/specs/navigation.spec.ts",
      "target": "cypress/integration/specs/navigation.spec.ts"
    },
    {
      "source": "cypress/integration/specs/selecting-elements.spec.ts",
      "target": "cypress/integration/specs/selecting-elements.spec.ts"
    },
    {
      "source": "cypress/integration/specs/viewport.spec.ts",
      "target": "cypress/integration/specs/viewport.spec.ts"
    },
    {
      "source": "cypress/integration/specs/test.spec.ts",
      "target": "cypress/integration/specs/test.spec.ts"
    },
    {
      "source": "meta/babel.config.js",
      "target": "babel.config.js"
    },
    {
      "source": "meta/README.md",
      "target": "README.md"
    },
    {
      "source": "meta/tsconfig.json",
      "target": "tsconfig.json"
    },
    {
      "source": "meta/tslint.json",
      "target": "tslint.json"
    },
    {
      "source": "layouts/default/default.scss",
      "target": "src/layouts/default/default.scss"
    },
    {
      "source": "layouts/default/default.spec.ts",
      "target": "src/layouts/default/default.spec.ts"
    },
    {
      "source": "layouts/default/default.ts",
      "target": "src/layouts/default/default.ts"
    },
    {
      "source": "layouts/default/default.vue",
      "target": "src/layouts/default/default.vue"
    },
    {
      "source": "layouts/default/index.ts",
      "target": "src/layouts/default/index.ts"
    },
    {
      "source": "meta/vue.config.js",
      "target": "vue.config.js"
    },
    {
      "source": "theme/_all.scss",
      "target": "src/theme/_all.scss"
    },
    {
      "source": "theme/tailwind.css",
      "target": "src/theme/tailwind.css"
    },
    {
      "source": "meta/.babelrc",
      "target": ".babelrc"
    },
    {
      "source": "storybook/components/example.vue",
      "target": ".storybook/components/example.vue"
    },
    {
      "source": "storybook/components/index.ts",
      "target": ".storybook/components/index.ts"
    },
    {
      "source": "storybook/components/playground.vue",
      "target": ".storybook/components/playground.vue"
    },
    {
      "source": "storybook/components/props.vue",
      "target": ".storybook/components/props.vue"
    },
    {
      "source": "storybook/components/preview.vue",
      "target": ".storybook/components/preview.vue"
    },
    {
      "source": "storybook/modules/constants.ts",
      "target": ".storybook/modules/constants.ts"
    },
    {
      "source": "storybook/modules/index.ts",
      "target": ".storybook/modules/index.ts"
    },
    {
      "source": "storybook/modules/preview-of.ts",
      "target": ".storybook/modules/preview-of.ts"
    },
    {
      "source": "storybook/addons.js",
      "target": ".storybook/addons.js"
    },
    {
      "source": "storybook/config.js",
      "target": ".storybook/config.js",
      "content": [
        {
          "matchRegex": "__PROJECT__NAME__KEBAB__",
          "replace": "${projectNameKebab}"
        }
      ]
    },
    {
      "source": "storybook/logo.svg",
      "target": ".storybook/logo.svg"
    },
    {
      "source": "storybook/main.js",
      "target": ".storybook/main.js"
    },
    {
      "source": "storybook/preview-head.html",
      "target": ".storybook/preview-head.html"
    },
    {
      "source": "storybook/stories.scss",
      "target": ".storybook/stories.scss",
      "content": [
        {
          "matchRegex": "__PROJECT__NAME__KEBAB__",
          "replace": "${projectNameKebab}"
        }
      ]
    },
    {
      "source": "storybook/tailwind.css",
      "target": ".storybook/tailwind.css"
    },
    {
      "source": "storybook/webpack.config.js",
      "target": ".storybook/webpack.config.js"
    },
    {
      "source": "storybook/modules/story.ts",
      "target": ".storybook/modules/story.ts"
    },
    {
      "source": "storybook/modules/constants.ts",
      "target": ".storybook/modules/constants.ts"
    },
    {
      "source": "storybook/postcss.config.js",
      "target": "postcss.config.js",
      "content": [
        {
          "matchRegex": "__PROJECT__NAME__KEBAB__",
          "replace": "${projectNameKebab}"
        }
      ]
    }
  ]
}