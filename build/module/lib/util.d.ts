import { Section } from 'command-line-usage';
declare function heading(): void;
declare function sectionBreak(): void;
declare function lineBreak(): void;
declare function nextSteps(featureName: string): void;
declare function hasCommand(args: string[], commands: string[]): boolean;
declare function hasOptions(args: string[], options: string[]): boolean;
declare function hasHelpOption(args: string[]): boolean;
declare function hasInvalidOption(args: string[], options: string[]): boolean;
declare function parseCommand(args: string[], commands: string[]): string;
declare function parseOptions(args: string[], commands: string[]): string[];
declare function displayHelp(sections: Section[]): string;
declare function getKebabCase(str: string): string;
declare function getPascalCase(str: string): string;
declare function hasKebab(str?: string): boolean;
declare function isRootDirectory(location?: string | null): boolean;
declare function getProjectRoot(): string | null;
declare function checkProjectValidity(operation: any): {
    isValid: boolean;
    projectRoot: any;
};
declare const _default: {
    heading: typeof heading;
    sectionBreak: typeof sectionBreak;
    lineBreak: typeof lineBreak;
    nextSteps: typeof nextSteps;
    hasCommand: typeof hasCommand;
    hasOptions: typeof hasOptions;
    hasHelpOption: typeof hasHelpOption;
    hasInvalidOption: typeof hasInvalidOption;
    parseCommand: typeof parseCommand;
    parseOptions: typeof parseOptions;
    displayHelp: typeof displayHelp;
    hasKebab: typeof hasKebab;
    getKebabCase: typeof getKebabCase;
    getPascalCase: typeof getPascalCase;
    checkProjectValidity: typeof checkProjectValidity;
    isRootDirectory: typeof isRootDirectory;
    getProjectRoot: typeof getProjectRoot;
};
export default _default;
